<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE web-app PUBLIC "-//Sun Microsystems, Inc.//DTD Web Application 2.3//EN" "http://java.sun.com/dtd/web-app_2_3.dtd">
<!-- This is the web.xml that will be used by the default - Browser internal - configuration -->
<web-app id="WebApp">
	<display-name>BrowserWeb</display-name>
	<distributable />
	<!-- Browser parameters file -->
	<context-param>
		<param-name>browserParameters</param-name>
		<param-value>browserParameters.xml</param-value>
	</context-param>
	<!-- Help parameters file -->
	<context-param>
		<param-name>helpParameters</param-name>
		<param-value>helpParameters.xml</param-value>
	</context-param>
	<!--  Tab Index Parameter File -->
	<context-param>
		<param-name>tabIndexParameters</param-name>
		<param-value>tabIndexParameters.xml</param-value>
	</context-param>
	<!-- Login Page Links file -->
	<context-param>
		<param-name>loginPageLinks</param-name>
		<param-value>loginPageLinks.xml</param-value>
	</context-param>
	<!-- nochangeFields list file -->
	<context-param>
		<param-name>nochangeFields</param-name>
		<param-value>nochangeFields.xml</param-value>
	</context-param>
	<!-- Captcha image type - 'Text' or 'FishEye' -->
	<context-param>
		<param-name>captchaImageType</param-name>
		<param-value>FishEye</param-value>
	</context-param>
	<context-param>
		<param-name>valid_input_regex</param-name>
		<!-- Anything that matches this regex will be rejected - the idea is to catch cross site scripting attacks (e.g. see ha.ckers.org/xss.html) -->
		<!-- NOTE: DO NOT USE 'CDATA' as this is NOT compatible with Oracle Application Server -->
		<param-value>
			((?i)&lt; */? *((?i)script|scr[\W]|META|img|div|form|object|applet|embed|frameset|iframe|a&gt;|a[\s]+)|javascript[\s]*[\W]|document\.write|document\.cookie|href[\s]*=|String\.fromCharCode|expression[\s]*\(|eval\([\s]*\(|onAbort[\W]|onActivate[\W]|onAfter[\W]|onBefore[\W]|onBlur[\W]|onBounce[\W]|onBegin[\W]|onCellChange[\W]|onChange[\W]|onClick[\W]|onContextMenu[\W]|onControlSelect[\W]|onCopy[\W]|onCut[\W]|onDataAvailable[\W]|onDatasetChange[\W]|onDatasetComplete[\W]|onDblClick[\W]|onDeactivate[\W]|onDrag[\W]|onDrop[\W]|onError[\W]|onFilterChange[\W]|onFinish[\W]|onFocus[\W]|onHelp[\W]|onKey[\s]*=|onLayoutComplete[\W]|onLoad[\W]|onLoseCapture[\W]|onMouseDown[\W]|onMouseEnter[\W]|onMouseLeave[\W]|onMouseMove[\W]|onMouseOut[\W]|onMouseOver[\W]|onMouseUp[\W]|onMouseWheel[\W]|onMove[\W]|onPaste[\W]|onPropertyChange[\W]|onReadyStateChange[\W]|onReset[\W]|onResize[\W]|onRowEnter[\W]|onRowExit[\W]|onRowsDelete[\W]|onRowsInserted[\W]|onScroll[\W]|onSelect[\W]|onSelectionChange[\W]|onSelectStart[\W]|onStart[\W]|onSubmit[\W]|onTimeError[\W]|onUnload[\W]|onMessage[\W]|\"[\s]*\)[\s]*\;|\'[\s]*\)[\s]*\;|\/\*|\*\/|\'[\s]*\=|\'[\s]*\+|\"[\s]*\=|\"[\s]*\+|\.\.\/|\.\.\\)
		</param-value>
	</context-param>
	<context-param>
		<param-name>valid_input_regex_strict</param-name>
		<!-- Anything that matches this regex will be rejected - the idea is to catch cross site scripting attacks (e.g. see ha.ckers.org/xss.html) -->
		<!-- NOTE: DO NOT USE 'CDATA' as this is NOT compatible with Oracle Application Server -->
		<param-value>
			((?i)&lt; */? *((?i)script|scr[\W]|META|img|div|form|object|applet|embed|frameset|iframe|a&gt;|a[\s]+)|javascript[\s]*[\W]|document\.write|document\.cookie|href[\s]*=|String\.fromCharCode|expression[\s]*|eval\([\W]|onAbort[\W]|onActivate[\W]|onAfter[\W]|onBefore[\W]|onBlur[\W]|onBounce[\W]|onBegin[\W]|onCellChange[\W]|onChange[\W]|onClick[\W]|onContextMenu[\W]|onControlSelect[\W]|onCopy[\W]|onCut[\W]|onDataAvailable[\W]|onDatasetChange[\W]|onDatasetComplete[\W]|onDblClick[\W]|onDeactivate[\W]|onDrag[\W]|onDrop[\W]|onError[\W]|onFilterChange[\W]|onFinish[\W]|onFocus[\W]|onHelp[\W]|onKey[\s]*=|onLayoutComplete[\W]|onLoad[\W]|onLoseCapture[\W]|onMouseDown[\W]|onMouseEnter[\W]|onMouseLeave[\W]|onMouseMove[\W]|onMouseOut[\W]|onMouseOver[\W]|onMouseUp[\W]|onMouseWheel[\W]|onMove[\W]|onPaste[\W]|onPropertyChange[\W]|onReadyStateChange[\W]|onReset[\W]|onResize[\W]|onRowEnter[\W]|onRowExit[\W]|onRowsDelete[\W]|onRowsInserted[\W]|onScroll[\W]|onSelect[\W]|onSelectionChange[\W]|onSelectStart[\W]|onStart[\W]|onSubmit[\W]|onTimeError[\W]|onUnload[\W]|onMessage[\W]|\"[\s]*\)[\s]*\;|\'[\s]*\)[\s]*\;|\/\*|\*\/|\'[\s]*\=|\'[\s]*\+|\"[\s]*\=|\"[\s]*\+|\.\.\/|\.\.\\)
		</param-value>
	</context-param>
	<filter>
		<filter-name>CaptchaFilter</filter-name>
		<description>
			This jCaptcha filter validates a Captcha image text is valid
		</description>
		<filter-class>
			com.temenos.t24browser.captcha.CaptchaFilter
		</filter-class>
	</filter>
	<filter>
		<filter-name>EncodingFilter</filter-name>
		<description>
			This 'helper' filter ensures the character encoding of the request is UTF-8.
			This filter *must* be used, and it *should* be called before any other
			filter or servlet that reads parameters from the request, otherwise
			data may become corrupt by incorrect encoding.
		</description>
		<filter-class>
			com.temenos.t24browser.servlets.EncodingFilter
		</filter-class>
	</filter>
 	<filter>
 		<filter-name>CharacterEncodingFilter</filter-name>
 		<description>
 			This filter Charcter Encoding
 		</description>
 		<filter-class>
 			com.temenos.t24browser.servlets.CharEncodingFilter
 		</filter-class>
 	</filter>
	<filter>
		<filter-name>ObfuscationServletFilter</filter-name>
		<description>
			This filter handles obfuscated requests and translates them
			to un-obfuscated.
		</description>
		<filter-class>
			com.temenos.t24browser.servlets.ObfuscationServletFilter
		</filter-class>
	</filter>
	<filter>
		<filter-name>CachingFilter</filter-name>
		<description>
			This filter will apply the 'Cache-Control:max-age' http header to resources 
			it covers to indicate to web browsers that the content should be cached.
			Should only be applied to non-sensitive 'static' content like images or stylesheets.
			MaxAgeInSeconds default value is 86400 (1 day).
			Only integer values from 1 to 2147483647 (approx 68 years) are understood.
		</description>
		<filter-class>
			com.temenos.t24browser.servlets.CachingFilter
		</filter-class>
		<init-param>
			<param-name>MaxAgeInSeconds</param-name>
			<param-value>86400</param-value>
		</init-param>
	</filter>
	<!-- 
	 -->
	<!-- 
	<filter>
		<filter-name>SingleSignOnFilter</filter-name>
		<description>
			This filter handles Single Sign On requests
		</description>
		<filter-class>
			com.temenos.t24browser.security.SingleSignOnFilter
		</filter-class>
	</filter>
	 -->
	<!-- 
	<filter>
		<filter-name>BasicAuthenticationFilter</filter-name>
		<description>
			This filter handles BASIC Authentication requests
		</description>
		<filter-class>
			com.temenos.t24browser.security.BasicAuthFilter
		</filter-class>
	</filter>
	 -->   
	<!-- BrowserFilter and HelpServletFilter are commented for NON-Blocking version for Regression and MB team -->
	<!-- It is advised to provide the blocked version to the Clients by enabling below BrowserFilter and HelpServletFilter  -->
	<!-- 
	<filter>
		<filter-name>BrowserFilter</filter-name>
		<description>
			This filter handles HTTP requests
		</description>
		<filter-class>
			com.temenos.t24browser.servlets.FormFieldInputFilter
		</filter-class>
		<init-param>
			<param-name>xssPatternName</param-name>
			<param-value>valid_input_regex</param-value>
		</init-param>
		<init-param>
			<param-name>redirectPage</param-name>
			<param-value>/jsps/FilterError.jsp</param-value>
		</init-param>
	</filter> 
	<filter>
		<filter-name>HelpServletFilter</filter-name>
		<description>
			This filter ensures '..' is never accepted by the Help servlet
		</description>
		<filter-class>
			com.temenos.t24browser.servlets.FormFieldInputFilter
		</filter-class>
		<init-param>
			<param-name>xssPatternName</param-name>
			<param-value>valid_input_regex_strict</param-value>
		</init-param>
		<init-param>
			<param-name>redirectPage</param-name>
			<param-value>/jsps/FilterError.jsp</param-value>
		</init-param>
	</filter> -->
	
	<!--
	<filter>
		<filter-name>FormTokenFilter</filter-name>
		<description>
			This filter adds form token id to all the response which contains the forms and checks if the request form that from contains the token id
		</description>
		<filter-class>
			com.temenos.arc.security.filter.FormTokenFilter
	    </filter-class>
	</filter>
	-->
	<!--
	<filter>
		<filter-name>GenericWebAuthenticationFilter</filter-name>
		<description>This filter retrieves the creates the SSOPrincipal object</description>
		<filter-class>com.temenos.t24browser.security.GenericWebAuthenticationFilter</filter-class>
	</filter>
	-->
	<!--<filter>
		<filter-name>CookieDNFilter</filter-name>
		<description>This filter retrieves the Dn from Cookie and sets in request</description>
		<filter-class>com.temenos.t24browser.security.CookieDNFilter</filter-class>
	</filter>
	<filter>
		<filter-name>LDAPAuthenticationFilter</filter-name>
		<description>This filter handles authentication of  username and password in LDAP</description>
		<filter-class>com.temenos.t24browser.security.LDAPAuthenticationFilter</filter-class>
	</filter>-->
	<!--<filter>
		<filter-name>CookieFilter</filter-name>
		<description>This filter handles authentication for user based on Cookie</description>
		<filter-class>com.temenos.t24browser.security.CookieFilter</filter-class>
	</filter>-->
	<filter>
		<filter-name>HTTPHeaderFilter</filter-name>
		<description>
			This filter adds http header parameters
		</description>
		<filter-class>
			com.temenos.arc.security.filter.HTTPHeaderFilter
	    </filter-class>
	</filter>
	<!-- Add separate filter-mapping if more than one URL pattern needs to be specified.-->
	<!-- Some web servers do not understand and throws error in deployement.-->
	<filter-mapping>
		<filter-name>HTTPHeaderFilter</filter-name>
		<url-pattern>/jsps/*</url-pattern>
	</filter-mapping>
	<filter-mapping>
		<filter-name>HTTPHeaderFilter</filter-name>
		<url-pattern>/servlet/*</url-pattern>
	</filter-mapping>
	<filter-mapping>
 		<filter-name>CharacterEncodingFilter</filter-name>
 		<url-pattern>/servlet/*</url-pattern>
 	</filter-mapping>
 	<filter-mapping>
		<filter-name>CaptchaFilter</filter-name>
		<url-pattern>/servlet/OfsServlet</url-pattern>
	</filter-mapping>
	<filter-mapping>
		<filter-name>EncodingFilter</filter-name>
		<url-pattern>/servlet/*</url-pattern>
	</filter-mapping>
	<filter-mapping>
		<filter-name>EncodingFilter</filter-name>
		<url-pattern>/jsps/*</url-pattern>
	</filter-mapping>
	<filter-mapping>
		<filter-name>ObfuscationServletFilter</filter-name>
		<url-pattern>/servlet/BrowserServlet</url-pattern>
	</filter-mapping>
	<filter-mapping>
		<filter-name>CachingFilter</filter-name>
		<url-pattern>/plaf/*</url-pattern>
	</filter-mapping>
	<filter-mapping>
		<filter-name>CachingFilter</filter-name>
		<url-pattern>/scripts/*</url-pattern>
	</filter-mapping>

	<!-- 
	<filter-mapping>
		<filter-name>SingleSignOnFilter</filter-name>
		<url-pattern>/servlet/BrowserServlet</url-pattern>
	</filter-mapping>
	 -->
	 <!-- 
 	<filter-mapping>
		<filter-name>BasicAuthenticationFilter</filter-name>
		<url-pattern>/servlet/BrowserServlet</url-pattern>
	</filter-mapping>
	  -->
	<!-- BrowserFilter and HelpServletFilter are commented for NON-Blocking version for Regression and MB team -->
	<!-- It is advised to provide the blocked version to the Clients by enabling below BrowserFilter and HelpServletFilter  -->
	<!-- 
	<filter-mapping>
		<filter-name>BrowserFilter</filter-name>
		<url-pattern>/servlet/*</url-pattern>
	</filter-mapping>
	<filter-mapping>
		<filter-name>BrowserFilter</filter-name>
		<url-pattern>/jsps/*</url-pattern>
	</filter-mapping>
	<filter-mapping>
		<filter-name>HelpServletFilter</filter-name>
		<servlet-name>HelpServlet</servlet-name>
	</filter-mapping>
	-->
	
	<!--
	<filter-mapping>
		<filter-name>FormTokenFilter</filter-name>
		<servlet-name>BrowserServlet</servlet-name>
	</filter-mapping>
	<filter-mapping>
		<filter-name>FormTokenFilter</filter-name>
		<url-pattern>/jsps/*</url-pattern>
	</filter-mapping>
	-->
	<!-- 
	<filter-mapping>
		<filter-name>GenericWebAuthenticationFilter</filter-name>
		<url-pattern>/servlet/*</url-pattern>
	</filter-mapping>
	<filter-mapping>
		<filter-name>GenericWebAuthenticationFilter</filter-name>
		<url-pattern>/jsps/*</url-pattern>
	</filter-mapping>
	-->
	<!--<filter-mapping>
		<filter-name>CookieDNFilter</filter-name>
		<url-pattern>/servlet/*</url-pattern>
	</filter-mapping>
	<filter-mapping>
		<filter-name>CookieDNFilter</filter-name>
		<url-pattern>/jsps/*</url-pattern>
	</filter-mapping>
	<filter-mapping>
		<filter-name>LDAPAuthenticationFilter</filter-name>
		<url-pattern>/servlet/*</url-pattern>
	</filter-mapping>
	<filter-mapping>
		<filter-name>LDAPAuthenticationFilter</filter-name>
		<url-pattern>/jsps/*</url-pattern>
	</filter-mapping>-->
	<!--<filter-mapping>
		<filter-name>CookieFilter</filter-name>
		<url-pattern>/servlet/BrowserServlet</url-pattern>
	</filter-mapping>-->
	<!-- The BrowserContextListener will perform any actions required at application startup, 
	     like loading browserParameters.xml into the ServletContext -->
	<listener>
		<listener-class>
			com.temenos.t24browser.utils.BrowserContextListener
		</listener-class>
	</listener>
	<!-- The BrowserSessionListener will log when web sessions have been destroyed -->
	<listener>
		<listener-class>
			com.temenos.t24browser.servlets.BrowserSessionListener
		</listener-class>
	</listener>
	<!-- The GraphSessionListener will clear 'used' files from the ../work/GraphImages folder at the end of a users session.
	     Only required if displaying graphs as .pngImages rather than SVG graphics. (see browserParameters.xml property)
	<listener>
		<listener-class>
			com.temenos.t24browser.graph.GraphSessionListener
		</listener-class>
	</listener>
	 -->
	<servlet>
		<servlet-name>GraphServlet</servlet-name>
		<display-name>GraphServlet</display-name>
		<servlet-class>
			com.temenos.t24browser.servlets.GraphServlet
		</servlet-class>
	</servlet>
	<servlet>
		<servlet-name>BrowserLoginServlet</servlet-name>
		<display-name>BrowserLoginServlet</display-name>
		<servlet-class>
			com.temenos.t24browser.servlets.BrowserLoginServlet
		</servlet-class>
	</servlet>
	<servlet>
		<servlet-name>BrowserServlet</servlet-name>
		<display-name>BrowserServlet</display-name>
		<servlet-class>
			com.temenos.t24browser.servlets.BrowserServlet
		</servlet-class>
		<load-on-startup>1</load-on-startup>
	</servlet>
	<servlet>
		<servlet-name>UploadServlet</servlet-name>
		<display-name>UploadServlet</display-name>
		<servlet-class>
			com.temenos.t24browser.servlets.UploadServlet
		</servlet-class>
	</servlet>
	<servlet>
		<servlet-name>HelpServlet</servlet-name>
		<display-name>HelpServlet</display-name>
		<servlet-class>
			com.temenos.t24browser.servlets.HelpServlet
		</servlet-class>
	</servlet>
	<servlet>
		<servlet-name>DocumentService</servlet-name>
		<display-name>DocumentService</display-name>
		<servlet-class>
			com.temenos.t24browser.servlets.DocumentService
		</servlet-class>
	</servlet>
	<servlet>
		<servlet-name>CaptchaImageServlet</servlet-name>
		<display-name>CaptchaImageServlet</display-name>
		<servlet-class>
			com.temenos.t24browser.captcha.CaptchaImageServlet
		</servlet-class>
		<load-on-startup>0</load-on-startup>
	</servlet>
	<servlet>
		<servlet-name>OfsServlet</servlet-name>
		<display-name>OfsServlet</display-name>
		<servlet-class>
			com.temenos.t24browser.ofs.OfsServlet
		</servlet-class>
	</servlet>
	<!-- Servlet to process request to files in cloud location -->
	<servlet>
		<servlet-name>GetImage</servlet-name>
		<display-name>GetImage</display-name>
		<servlet-class>com.temenos.t24browser.servlets.GetImage</servlet-class>
	</servlet>	
	<servlet>
		<servlet-name>FileUploadServlet</servlet-name>
		<display-name>FileUploadServlet</display-name>
		<servlet-class>
			com.temenos.t24browser.servlets.FileUploadServlet
		</servlet-class>
	</servlet>
	<servlet>
		<servlet-name>PortalHelpServlet</servlet-name>
		<display-name>PortalHelpServlet</display-name>
		<description>PortalHelptext</description>
		<servlet-class>com.temenos.t24browser.servlets.PortalHelpServlet</servlet-class>
	</servlet>
	<servlet>
		<servlet-name>DirectURLRestrictionServlet</servlet-name>
		<display-name>DirectURLRestrictionServlet</display-name>
		<servlet-class>
			com.temenos.t24browser.servlets.DirectURLRestrictionServlet
		</servlet-class>
		<load-on-startup>1</load-on-startup>
	</servlet>
	<servlet>
		<servlet-name>RenderImageServlet</servlet-name>
		<display-name>RenderImageServlet</display-name>
		<servlet-class>
			com.temenos.t24browser.servlets.RenderImageServlet
		</servlet-class>
	</servlet>
	<servlet>
		<servlet-name>DisplayServerImage</servlet-name>
		<display-name>DisplayServerImage</display-name>
		<description></description>
		<servlet-class>com.temenos.t24browser.servlets.DisplayServerImage</servlet-class>
	</servlet>
	<servlet-mapping>
		<servlet-name>FileUploadServlet</servlet-name>
		<url-pattern>/servlet/FileUploadServlet</url-pattern>
	</servlet-mapping>
	<servlet-mapping>
		<servlet-name>GraphServlet</servlet-name>
		<url-pattern>/servlet/GraphServlet</url-pattern>
	</servlet-mapping>
	<servlet-mapping>
		<servlet-name>BrowserLoginServlet</servlet-name>
		<url-pattern>/servlet/BrowserLoginServlet</url-pattern>
	</servlet-mapping>
	<servlet-mapping>
		<servlet-name>BrowserServlet</servlet-name>
		<url-pattern>/servlet/BrowserServlet</url-pattern>
	</servlet-mapping>
	<servlet-mapping>
		<servlet-name>UploadServlet</servlet-name>
		<url-pattern>/servlet/UploadServlet</url-pattern>
	</servlet-mapping>
	<servlet-mapping>
		<servlet-name>HelpServlet</servlet-name>
		<url-pattern>/servlet/HelpServlet</url-pattern>
	</servlet-mapping>
	<servlet-mapping>
		<servlet-name>CaptchaImageServlet</servlet-name>
		<url-pattern>/servlet/CaptchaImageServlet</url-pattern>
	</servlet-mapping>
	<servlet-mapping>
		<servlet-name>OfsServlet</servlet-name>
		<url-pattern>/servlet/OfsServlet</url-pattern>
	</servlet-mapping>
	<servlet-mapping>
		<servlet-name>PortalHelpServlet</servlet-name>
		<url-pattern>/servlet/PortalHelpServlet</url-pattern>
	</servlet-mapping>
	<servlet-mapping>
		<servlet-name>DirectURLRestrictionServlet</servlet-name>
		<url-pattern>/browserParameters.xml</url-pattern>
	</servlet-mapping>
	<servlet-mapping>
		<servlet-name>RenderImageServlet</servlet-name>
		<url-pattern>/servlet/RenderImageServlet</url-pattern>
	</servlet-mapping>
	<servlet-mapping>
    	<servlet-name>GetImage</servlet-name>
    	<url-pattern>/GetImage/*</url-pattern>
  	</servlet-mapping>
  	<servlet-mapping>
		<servlet-name>DisplayServerImage</servlet-name>
		<url-pattern>/servlet/DisplayServerImage</url-pattern>
	</servlet-mapping>	

	<session-config>
		<session-timeout>30</session-timeout>
	</session-config>
	<mime-mapping>
   		<extension>svg</extension>
   		<mime-type>image/svg+xml</mime-type>
	</mime-mapping>
	<!--  Error pages -->
	<!--<error-page>
    	<exception-type>com.temenos.t24browser.exceptions.LDAPAuthenticationException</exception-type>
		<location>/jsps/ldapLogin.jsp</location>
	</error-page>
	<error-page>
		<exception-type>com.temenos.t24browser.exceptions.LDAPServiceNotAvailableException</exception-type>
		<location>/jsps/noServiceError.jsp</location>
	</error-page>-->
	<!--<error-page>
		<exception-type>com.temenos.t24browser.exceptions.GenericAuthenticationException</exception-type>
		<location>/jsps/customMessage.jsp</location>
	</error-page>-->
	<error-page>
		<error-code>403</error-code>
		<location>/html/t24browser.html</location>
	</error-page>
	<error-page>
		<error-code>404</error-code>
		<location>/html/t24browser.html</location>
	</error-page>	
	<error-page>
		<error-code>405</error-code>
		<location>/html/t24browser.html</location>
	</error-page>	
	<error-page>
		<error-code>500</error-code>
		<location>/html/t24browser_500.html</location>
	</error-page>
	<resource-ref id="ResourceRef_t24ConnectionFactory">
		<description>T24</description>
		<res-ref-name>jca/t24ConnectionFactory</res-ref-name>
		<res-type>com.temenos.tocf.t24ra.T24ConnectionFactory</res-type>
		<res-auth>Container</res-auth>
	</resource-ref>
	<resource-ref id="ResourceRef_jmsConnectionFactory">
		<description>Used to get connections to JMS for OFS queues</description>
		<res-ref-name>jms/jmsConnectionFactory</res-ref-name>
		<res-type>javax.jms.ConnectionFactory</res-type>
		<res-auth>Container</res-auth>
	</resource-ref>
	<resource-ref id="ResourceRef_t24OFSQueue">
		<description>OFS queue</description>
		<res-ref-name>queue/t24OFSQueue</res-ref-name>
		<res-type>javax.jms.Queue</res-type>
		<res-auth>Container</res-auth>
	</resource-ref>
	<resource-ref id="ResourceRef_t24OFSReplyQueue">
		<description>OFS reply queue</description>
		<res-ref-name>queue/t24OFSReplyQueue</res-ref-name>
		<res-type>javax.jms.Queue</res-type>
		<res-auth>Container</res-auth>
	</resource-ref>
	<!-- Security Stuff for Sinlge Sign on with AD using BASIC authentication -->
	<!--
	<security-role>
	  <role-name>t24user</role-name>
	</security-role>
	<security-constraint>
		<web-resource-collection>
        	<web-resource-name>BrowserWeb</web-resource-name>
        	<url-pattern>/*</url-pattern>
    	</web-resource-collection>
    	<auth-constraint>
		  <role-name>t24user</role-name>
		</auth-constraint> 	
	</security-constraint>
	<login-config>
	  <auth-method>BASIC</auth-method>
	  <realm-name>T24 Browser</realm-name>
	</login-config> 
	-->
	<!-- Security Stuff for Sinlge Sign on with AD using FORM authentication -->
	<!--
	<security-role>
	  <role-name>t24user</role-name>
	</security-role>
	<security-constraint>
		<web-resource-collection>
        	<web-resource-name>BrowserWeb</web-resource-name>
        	<url-pattern>/servlet/BrowserServlet</url-pattern>
    	</web-resource-collection>
    	<auth-constraint>
		  <role-name>t24user</role-name>
		</auth-constraint> 	
	</security-constraint>
	<login-config>
	  <auth-method>FORM</auth-method>
	  <form-login-config>
	     <form-login-page>/jsps/formLogin.jsp</form-login-page>
		 <form-error-page>/jsps/formError.jsp</form-error-page>
	  </form-login-config>
	</login-config> 
	-->
	<!-- Security Stuff -->
	<!-- 
    <security-role>
	  <role-name>t24user</role-name>
	</security-role>
	<security-constraint>
    	<web-resource-collection>
        	<web-resource-name>BrowserWeb</web-resource-name>
        	<url-pattern>/*</url-pattern>
    	</web-resource-collection>

    	<auth-constraint>
        	<role-name>t24user</role-name>
    	</auth-constraint>
     	
	</security-constraint>

	<login-config>
	    <auth-method>BASIC</auth-method>
	    <realm-name>T24</realm-name>
	</login-config>
 	  -->
 	  
	<!-- Security Stuff -->
	<security-constraint>
		<!-- With no role-name in the auth-constraint, this blocks access to xsl files even when authenticated -->
    	<web-resource-collection>
        	<web-resource-name>BrowserWeb</web-resource-name>
        	<url-pattern>*.xsl</url-pattern>
    	</web-resource-collection>
    	<auth-constraint>
			<!-- deliberately empty (see above) -->
		</auth-constraint> 	
	</security-constraint>
 
</web-app>
